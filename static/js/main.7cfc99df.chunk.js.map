{"version":3,"sources":["redux/store.js","redux/constants/index.js","redux/reducers/index.js","data/locations.js","components/map/RoutingMachine.js","components/map/Map.js","redux/mapStateToProps.js","data/shippingList.js","components/shippingCard/ShippingCard.js","redux/actions/index.js","components/list/List.js","App.js","index.js"],"names":["store","CONSTS","initialState","shippingList","locations","id","name","lat","lng","selectedShippingId","createStore","state","action","type","payload","newLocation","find","i","locationId","map","item","shippingId","compose","applyMiddleware","thunk","Routing","props","this","control","L","show","lineOptions","styles","color","opacity","weight","addWaypononeints","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","leafletElement","hide","getPlan","setWaypoints","latLng","from","to","prevProps","MapLayer","withLeaflet","mapDefaults","MapWrapper","useState","isMapInit","setIsMapInit","mafRef","useRef","zoom","position","Map","center","ref","current","className","TileLayer","url","attribution","mapStateToProps","date","Option","Select","mapDispatchToProps","UpdateShippingAddress","dispatch","UpdateSelectedShipping","connect","data","onClick","showSearch","placeholder","optionFilterProp","onChange","value","length","filter","l","GetShippingData","Promise","resolve","randomReqTime","Math","floor","random","setTimeout","loading","setLoading","useEffect","finally","LoadingOutlined","shipping","minWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cfc99df.chunk.js","sourcesContent":["import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport Reducer from './reducers';\r\n\r\nlet store;\r\n\r\nstore = createStore(Reducer,\r\n    compose(applyMiddleware(thunk))\r\n);\r\n\r\n\r\nexport {store};\r\n","export const CONSTS = {\r\n    SET_SHIPPING_LIST: \"SET_SHIPPING_LIST\",\r\n    UPDATE_SHIPPING_ADDRESS: \"UPDATE_SHIPPING_ADDRESS\",\r\n    UPDATE_SELECTED_SHIPPING: \"UPDATE_SELECTED_SHIPPING\",\r\n};\r\n","import {CONSTS} from \"../constants\";\r\nimport {locations} from \"../../data/locations\";\r\n\r\nexport const initialState = {\r\n    shippingList: [],\r\n    locations: locations,\r\n    selectedShippingId: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTS.SET_SHIPPING_LIST:\r\n            return {\r\n                ...state,\r\n                shippingList: action.payload\r\n            };\r\n        case CONSTS.UPDATE_SHIPPING_ADDRESS:\r\n            const newLocation = state.locations.find(i=>i.id === action.payload.locationId);\r\n            return {\r\n                ...state,\r\n                shippingList: state.shippingList.map(item => {\r\n                    return item.id === action.payload.shippingId ? {\r\n                        ...item,\r\n                        [action.payload.type]:newLocation\r\n                    }: item\r\n                })\r\n            };\r\n        case CONSTS.UPDATE_SELECTED_SHIPPING:\r\n            return {\r\n                ...state,\r\n                selectedShippingId: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const locations = [\r\n    {\r\n        id: 'dfsikd',\r\n        name: 'Armavir',\r\n        lat: '40.1590519',\r\n        lng: '44.0250491'\r\n    }, {\r\n        id: 'thjilx',\r\n        name: 'Yerevan',\r\n        lat: '40.1535005',\r\n        lng: '44.4185274'\r\n    }, {\r\n        id: 'rgbnju',\r\n        name: 'Sevan',\r\n        lat: '40.548772',\r\n        lng: '44.957293'\r\n    }, {\r\n        id: 'lsdojd',\r\n        name: 'Tsakhkadzor',\r\n        lat: '40.531104',\r\n        lng: '44.719860'\r\n    }, {\r\n        id: 'domfjd',\r\n        name: 'Dilijan',\r\n        lat: '40.741784',\r\n        lng: '44.872034'\r\n    }, {\r\n        id: 'ufjisk',\r\n        name: 'Ijevan',\r\n        lat: '40.878007',\r\n        lng: '45.143766'\r\n    }, {\r\n        id: 'idksuy',\r\n        name: 'Jermuk',\r\n        lat: '39.840426',\r\n        lng: '45.670322'\r\n    }, {\r\n        id: 'pskduc',\r\n        name: 'Yeghegnadzor',\r\n        lat: '39.764008',\r\n        lng: '45.333242'\r\n    }, {\r\n        id: 'oidskd',\r\n        name: 'Abovyan',\r\n        lat: '40.279573',\r\n        lng: '44.629786'\r\n    }, {\r\n        id: 'rtfdxv',\r\n        name: 'Arzni',\r\n        lat: '40.295609',\r\n        lng: '44.597328'\r\n    },\r\n]","import {MapLayer, withLeaflet} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport \"lrm-google\";\r\n\r\nclass Routing extends MapLayer {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    createLeafletElement() {\r\n        const { map } = this.props;\r\n        let control = L.Routing.control({\r\n            show: false,\r\n            lineOptions: {\r\n                styles: [\r\n                    {\r\n                        color: \"blue\",\r\n                        opacity: 1,\r\n                        weight: 3\r\n                    }\r\n                ]\r\n            },\r\n            addWaypononeints: false,\r\n            draggableWaypoints: false,\r\n            fitSelectedRoutes: true,\r\n            showAlternatives: false\r\n        });\r\n        this.control = control;\r\n        let leafletElement = control.addTo(map.leafletElement)\r\n        leafletElement.hide();\r\n       return control.getPlan();\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        const { locations } = this.props;\r\n        this.control.setWaypoints([L.latLng(locations.from.lat, locations.from.lng),\r\n            L.latLng(locations.to.lat, locations.to.lng)])\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        super.componentDidUpdate(prevProps);\r\n        const {locations} = this.props;\r\n\r\n        this.control.setWaypoints([L.latLng(locations.from.lat, locations.from.lng),\r\n            L.latLng(locations.to.lat, locations.to.lng)])\r\n    }\r\n}\r\n\r\nexport default withLeaflet(Routing);\r\n","import React, {useRef, useState} from \"react\";\nimport {Map, TileLayer} from \"react-leaflet\";\n\nimport Routing from \"./RoutingMachine\";\n\nconst mapDefaults = {\n    lat: 40.1535005,\n    lng: 44.4185274,\n    zoom: 8,\n}\n\nfunction MapWrapper(props) {\n    const [isMapInit, setIsMapInit] = useState(false)\n\n    const mafRef = useRef()\n\n   const saveMap = map => {\n       mafRef.current = map;\n       setIsMapInit(true);\n    };\n\n    const {lat, lng, zoom} = mapDefaults;\n    const position = [lat, lng];\n\n    return (\n        <Map center={position} zoom={zoom} ref={saveMap} className={'map'}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {isMapInit && props.locations &&  <Routing map={mafRef.current}\n                                                       locations={props.locations}\n            />}\n        </Map>\n    );\n}\n\nexport default MapWrapper;\n","export const mapStateToProps = state =>state;\r\n\r\n","export const shippingList = [\r\n    {\r\n        id: '441315',\r\n        date: '06-15-22',\r\n        from: {\r\n            id: 'dfsikd',\r\n            name: 'Armavir',\r\n            lat: '40.1590519',\r\n            lng: '44.0250491'\r\n        },\r\n        to: {\r\n            id: 'thjilx',\r\n            name: 'Yerevan',\r\n            lat: '40.1535005',\r\n            lng: '44.4185274'\r\n        },\r\n    },\r\n    {\r\n        id: '895147',\r\n        date: '08-05-22',\r\n        from: {\r\n            id: 'thjilx',\r\n            name: 'Yerevan',\r\n            lat: '40.1535005',\r\n            lng: '44.4185274'\r\n        },\r\n        to: {\r\n            id: 'domfjd',\r\n            name: 'Dilijan',\r\n            lat: '40.741784',\r\n            lng: '44.872034'\r\n        },\r\n    },\r\n    {\r\n        id: '847692',\r\n        date: '10-20-22',\r\n        from: {\r\n            id: 'ufjisk',\r\n            name: 'Ijevan',\r\n            lat: '40.878007',\r\n            lng: '45.143766'\r\n        },\r\n        to: {\r\n            id: 'domfjd',\r\n            name: 'Dilijan',\r\n            lat: '40.741784',\r\n            lng: '44.872034'\r\n        },\r\n    },\r\n    {\r\n        id: '689345',\r\n        date: '06-02-22',\r\n        from: {\r\n            id: 'idksuy',\r\n            name: 'Jermuk',\r\n            lat: '39.840426',\r\n            lng: '45.670322'\r\n        },\r\n        to: {\r\n            id: 'pskduc',\r\n            name: 'Yeghegnadzor',\r\n            lat: '39.764008',\r\n            lng: '45.333242'\r\n        },\r\n    },\r\n    {\r\n        id: '758619',\r\n        date: '10-15-22',\r\n        from: {\r\n            id: 'rgbnju',\r\n            name: 'Sevan',\r\n            lat: '40.548772',\r\n            lng: '44.957293'\r\n        },\r\n        to: {\r\n            id: 'lsdojd',\r\n            name: 'Tsakhkadzor',\r\n            lat: '40.531104',\r\n            lng: '44.719860'\r\n        },\r\n    },\r\n    {\r\n        id: '589314',\r\n        date: '10-15-22',\r\n        from: {\r\n            id: 'oidskd',\r\n            name: 'Abovyan',\r\n            lat: '40.279573',\r\n            lng: '44.629786'\r\n        },\r\n        to: {\r\n            id: 'rgbnju',\r\n            name: 'Sevan',\r\n            lat: '40.548772',\r\n            lng: '44.957293'\r\n        },\r\n    },\r\n]","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Select} from \"antd\";\r\n\r\nimport {mapStateToProps} from \"../../redux/mapStateToProps\";\r\nimport {UpdateSelectedShipping, UpdateShippingAddress} from \"../../redux/actions\";\r\n\r\nimport \"./shippingCard.css\";\r\n\r\nconst {Option} = Select;\r\n\r\nfunction ShippingCard({\r\n                          data,\r\n                          locations,\r\n                          selectedShippingId,\r\n                          UpdateShippingAddress,\r\n                          UpdateSelectedShipping\r\n                      }) {\r\n\r\n    const changeFrom = (locationId) => {\r\n        UpdateShippingAddress(data.id, locationId, 'from')\r\n    };\r\n    const changeTo = (locationId) => {\r\n        UpdateShippingAddress(data.id, locationId, 'to')\r\n    };\r\n\r\n    const selectShipping = () => {\r\n        UpdateSelectedShipping(data.id)\r\n    };\r\n\r\n\r\n    return <div className={`shipping-item ${selectedShippingId === data.id ? \"selected\": ''}`} key={data.id} onClick={selectShipping}>\r\n        <div className=\"shipping-info\">\r\n            <span className={'shipping-id'}>N: {data.id}</span>\r\n            <span className={'shipping-date'}>Date: {data.date}</span>\r\n        </div>\r\n        <div className=\"locations\">\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Select a person\"\r\n                optionFilterProp=\"children\"\r\n                onChange={changeFrom}\r\n                value={data.from.id}\r\n            >\r\n                {\r\n                    !!locations?.length && locations?.filter(l => l.id !== data.to.id)?.map(item => {\r\n                        return <Option value={item.id} key={item.id}>{item.name}</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Select a person\"\r\n                optionFilterProp=\"children\"\r\n                onChange={changeTo}\r\n                value={data.to.id}\r\n            >\r\n                {\r\n                    !!locations?.length && locations?.filter(l => l.id !== data.from.id)?.map(item => {\r\n                        return <Option value={item.id} key={item.id}>{item.name}</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UpdateShippingAddress,\r\n    UpdateSelectedShipping\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingCard)","import {CONSTS} from \"../constants\";\r\nimport {shippingList} from \"../../data/shippingList\";\r\n\r\nexport const GetShippingData = () => {\r\n    // api call imitation\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            const randomReqTime = Math.floor(Math.random() * 300 + 700); // [700 - 1000]\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: CONSTS.SET_SHIPPING_LIST,\r\n                    payload: shippingList\r\n                });\r\n                resolve()\r\n            }, randomReqTime)\r\n        })\r\n\r\n    };\r\n};\r\n\r\nexport const UpdateShippingAddress = (shippingId, locationId, type) => {\r\n    return dispatch => {\r\n        return dispatch({\r\n            type: CONSTS.UPDATE_SHIPPING_ADDRESS,\r\n            payload: { locationId, shippingId, type }\r\n        })\r\n    };\r\n};\r\n\r\nexport const UpdateSelectedShipping = (locationId) => {\r\n    return dispatch => {\r\n        return dispatch({\r\n            type: CONSTS.UPDATE_SELECTED_SHIPPING,\r\n            payload: locationId\r\n        })\r\n    };\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './list.css'\r\n\r\nimport {mapStateToProps} from \"../../redux/mapStateToProps\";\r\nimport {GetShippingData} from \"../../redux/actions\";\r\n\r\nimport ShippingCard from \"../shippingCard/ShippingCard\";\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\nfunction List({shippingList, GetShippingData}) {\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        GetShippingData().finally(() => {\r\n            setLoading(false)\r\n        });\r\n    }, []);\r\n    return <div>\r\n        <h1>Shipping list</h1>\r\n        <div className=\"shipping-list\">\r\n            {!loading ?\r\n                shippingList?.map(item => {\r\n                    return <ShippingCard key={item.id} data={item}/>\r\n                }) :\r\n                <div className={'loading'}><LoadingOutlined /></div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapDispatchToProps = {GetShippingData}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ColumnResizer from \"react-column-resizer\";\r\n\r\nimport MapComponent from \"./components/map/Map\";\r\nimport List from \"./components/list/List\";\r\n\r\nimport {mapStateToProps} from \"./redux/mapStateToProps\";\r\n\r\nfunction App({shippingList, selectedShippingId}) {\r\n    const shipping = shippingList?.find(l=>l.id === selectedShippingId)\r\n    const locations = shipping && {\r\n        from: shipping.from,\r\n        to: shipping.to\r\n    }\r\n\r\n    return <div>\r\n        <table>\r\n            <tbody>\r\n            <tr>\r\n                <td><List/></td>\r\n                <ColumnResizer className=\"columnResizer\" minWidth={0}/>\r\n                <td>\r\n                    <MapComponent locations={locations}/>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}